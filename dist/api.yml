---
openapi: 3.0.0
info:
  title: Simple Inventory API
  description: This is a simple API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
tags:
  - name: Users
    description: Operations available to users
  - name: Auth
    description: authenticaton 
  - name: League
    description: league data handle
  - name: Teams
    description: Team 
  - name: Players
  - name: Games
  - name: Coaches
paths:
  /users/allUsersDetails:
    get:
      tags:
      - Users
      summary: Return list of all the users
      responses:
        "200":
          description: The users list returned to user
          content:
            application/jason:
              schema:
                type: string
        "400":
          description: The request for getting the user list has been denied
  /register:
    post:
      tags:
      - Auth
      summary: Add new user
      requestBody:
        description: New user insert
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        "200":
          description: A new user has been added to the server
        "400":
          description: The request for add new user has been denied
  /users/userDetails:
    get:
      tags:
      - Users
      summary: Get data of a spacific user
      description: get from the client a username and returns his data
      responses:
        "200":
          description: Data of the spacific user
          content:
            application/jason:
              schema:
                type: string
        "400":
          description: User not found
  /login:
    post:
      tags:
      - Auth
      summary: Logs user into the system
      description: Logs user into the system
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        "200":
          description: successful operation
        "400":
          description: Invalid username/password supplied
  /user/logOut:
    post:
      tags:
      - Auth
      summary: Logs user out of the system
      description: Logs user out of the system
      operationId: logOutUser
      responses:
        "200":
          description: successful Loged out
        "400":
          description: The user must be loged in before log out
  /league/LeagueData:
    get:
      tags:
      - League
      summary: Return main page league data
      responses:
        "200":
          description: The main page legue data returned to user
          content:
            application/jason:
              schema:
                $ref: '#/components/schemas/LeagueData'
        "400":
          description: The request for getting the main page legue data has been denied
  /coaches/coachDetails/{coachID}:
    get:
      tags:
      - Coaches
      summary: Return the card of the coach
      parameters:
      - name: coachID
        in: path
        description: The name of the coach
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: coach card has been returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/previewViewCoach'
        "400":
          description: The request for getting the coach card has been denied
  /players/playerDetails/{playerID}:
    get:
      tags:
      - Players
      summary: Return the card of the player
      parameters:
      - name: playerID
        in: path
        description: The name of the player
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: player card has been returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/previewViewPlayer'
        "400":
          description: The request for getting player card has been denied
  /users/FavoriteTeams:
    get:
      tags:
      - Teams
      - Users
      summary: Return favorites teams data for the user
      responses:
        "200":
          description: The favorites teams data returned to user
          content:
            application/jason:
              schema:
                $ref: '#/components/schemas/UserFavoritesTeams'
        "400":
          description: The request for getting favorite teams data has been denied
    post:
      tags:
      - Users
      - Teams
      summary: Add team to faivorite list of user
      requestBody:
        description: The team id to be added
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                  description: teams's id which the user saved
                  example: 85
      responses:
        "201":
          description: The team has been added to favorite list
        "400":
          description: The request for add new team to fav. list has been denied
  /teams/teamFullDetails/{teamID}:
    get:
      tags:
      - Teams
      parameters:
      - name: teamID
        in: path
        description: The ID of the team
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Data of the spacific Team
          content:
            application/jason:
              schema:
                $ref: '#/components/schemas/teamData'
        "400":
          description: Team not found
  /teams/search/{searchKey}:
    get:
      tags:
      - Teams
      parameters:
      - name: searchKey
        in: path
        description: The keyWord to search team by (name)
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: AaB
      responses:
        "200":
          description: Search Results
          content:
            application/jason:
              schema:
                $ref: '#/components/schemas/SearchResults'
        "400":
          description: Term not found
  /players/search/{searchKey}:
    get:
      tags:
      - Players
      parameters:
      - name: searchKey
        in: path
        description: The keyWord to search player by (name)
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: James Forrest
      responses:
        "200":
          description: Search Results
          content:
            application/jason:
              schema:
                $ref: '#/components/schemas/SearchResults'
        "400":
          description: Team not found
  /games/GameDocumentation/{gameID}:
    get:
      tags:
      - Games
      summary: Return the decumentation of the game
      parameters:
      - name: gameID
        in: path
        description: game id to return details about
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Game documentation has been returned to client
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gameDocumentation'
        "400":
          description: The request to get the game documantation has been denied
  /games/league/leagueGames:
    get:
      tags:
      - League
      summary: Return array with all the games
      parameters:
      - name: leagueID
        in: path
        description: league ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: return array with all the games in the league
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/leagueGames'
        "400":
          description: The request to get league Games has been denied
  /games/LeagueManagment/addGame:
    post:
      tags:
      - Games
      summary: Add game to the league managment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: 
                date:
                  type: string
                hour:
                  type: string
                away_team_id:
                  type: number
                home_team_id: 
                  type: number
                field: 
                  type: string
                referee_name:
                  type: string
      responses:
        "200":
          description: The game added to the league
          content:
            application/json:
              schema:
                type: object
        "400":
          description: The requset to add game to league has been denied
  /games/LeagueManagment/{gameID}:
    post:
      tags:
      - Games
      summary: Add score to game
      parameters:
      - name: gameID
        in: path
        description: The ID of the game to add score to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The game hasa been update with the score
          content:
            application/json:
              schema:
                type: string
                example: 2-1
        "400":
          description: The requset to add score to game has been denied
  /games/LeagueManagment/addEvent/{gameID}:
    post:
      tags:
      - Games
      summary: Add event schedule to game
      parameters:
      - name: gameID
        in: path
        description: The ID of the game to add score to
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Event schedule has been added to the game
          content:
            application/json:
              schema:
                type: object
                description: Event schedule object add to game
        "400":
          description: The requset to add event schedule  to game has been denied
  /users/FavoritePlayers:
    get:
      tags:
      - Users
      - Players
      summary: Return favorites data for the user
      responses:
        "200":
          description: The favorites players data returned to user
          content:
            application/jason:
              schema:
                $ref: '#/components/schemas/UserFavoritePlayers'
        "400":
          description: The request for getting the main page legue data has been denied
    post:
      tags:
      - Users
      - Players
      summary: Add player to faivorite list of user
      requestBody:
        description: The team id to be added
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                  description: teams's id which the user saved
                  example: 85
      responses:
        "200":
          description: The player has been added to favorite list
          content:
            application/json:
              schema:
                type: string
        "400":
          description: The request for add new player to fav. list has been denied
  /users/FavoriteGames:
    get:
      tags:
      - Users
      - Games
      summary: Return favorites data for the user
      responses:
        "200":
          description: The main page favorites data returned to user
          content:
            application/jason:
              schema:
                $ref: '#/components/schemas/UserFavoritesGames'
        "400":
          description: The request for getting the main page legue data has been denied
    post:
      tags:
      - Users
      - Games
      summary: Add game to faivorite list of user
      requestBody:
        description: The team id to be added
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                  description: teams's id which the user saved
                  example: 85
      responses:
        "200":
          description: The Game has been added to favorite list
        "400":
          description: The request for add new Game to fav. list has been denied
  
components:
  schemas:
    Login:
      type: object
      properties:
        username:
          type: string
          example: noam
        password:
          type: string
          example: "12345$a"
    UserRegister:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          example: noam
        firstname:
          type: string
          example: aviran
        lastname:
          type: string
          example: giat
        country:
          type: string
          example: israel
        password:
          maxLength: 10
          minLength: 5
          type: string
          example: 12345$a
        email:
          type: string
          example: kotlar@post.bgu.ac.il
        picture:
          type: string
    LeagueData:
      type: object
      properties:
        leagueName:
          type: string
          example: Astars
        seasonName:
          type: string
          example: summer
        stageName:
          type: string
          example: A
        ameDetails:
          type: object
    UserFavoritesGames:
      type: object
      properties:
        matches:
          type: array
          items:
            type: object
    UserFavoritePlayers:
      type: object
      properties:
        matches:
          type: array
          items:
            type: object
    UserFavoritesTeams:
      type: object
      properties:
        matches:
          type: array
          items:
            type: object
    gameData:
      type: object
      properties:
        nameTeam1:
          type: string
          example: barcellona
        nameTeam2:
          type: string
          example: real madrid
        date:
          type: string
          example: 1/1/21
        score:
          type: string
          example: 1-2
    previewViewCoach:
      type: object
      properties:
        fullname:
          type: string
        currentTeamName:
          type: string
        image:
          type: string
        commonName:
          type: string
        nation:
          type: string
        birthDay:
          type: string
        countryOB:
          type: string
    previewViewPlayer:
      type: object
      properties:
        fullname:
          type: string
        currentTeamName:
          type: string
        image:
          type: object
        stageNumber:
          type: integer
    teamData:
      type: object
      properties:
        TeamPlayers:
          type: array
          items:
            type: object
        TeamManager:
          type: string
        GameHistory:
          type: array
          items:
            type: object
        PresentGames:
          type: array
          items:
            type: object
    SearchResults:
      type: object
      properties:
        Players:
          type: array
          items:
            type: object
        Coaches:
          type: array
          items:
            type: object
        Teams:
          type: array
          items:
            type: object
    gameDocumentation:
      type: object
      properties:
        date:
          type: string
          example: 1/1/21
        time:
          type: string
          example: 20:00
        hostTeam:
          type: object
        geustTeam:
          type: object
        field:
          type: string
        score:
          type: string
          description: If null- means the game not occur yet
          example: 2-0
        eventSchedule:
          type: object
          description: If null- means the game not occur yet. cointains the events in the game
    leagueGames:
      type: object
      properties:
        Players:
          type: array
          items:
            type: object
